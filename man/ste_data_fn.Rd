% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ste_data_fn.R
\name{ste_data_fn}
\alias{ste_data_fn}
\title{Create STE encounter history}
\usage{
ste_data_fn(x, count_col, samp_freq, samp_length, cam_areas, date_lim, A)
}
\arguments{
\item{x}{A dataframe with columns named cam (any class) and datetime (class POSIXct)
and a column (any name) of the count of target species in each photo.}

\item{count_col}{The name of the column containing the count of animals}

\item{samp_freq}{How often to sample, in seconds. E.g., samp_freq = 3600 for 1 sampling occasion every hour}

\item{samp_length}{The desired length of each sampling occasion, in seconds. E.g.,
samp_length = 10 for sampling occasions that last 10 seconds}

\item{cam_areas}{A dataframe made by a_lookup_fn or similar (with columns cam and a).
Must have one row per active camera and that camera's area (a)}

\item{date_lim}{A vector of length 2 of class POSIXct. The first and last date of the
desired sampling period.}

\item{A}{The size of the study area (same units as a)}
}
\value{
A list with the encounter history for an STE model.
}
\description{
User defines sampling period and frequency. This function randomizes active
cameras at every time step and finds the STE. Then it formats it as the input
 to ste_estN_fn
}
\details{
Disclaimer! This function currently does not account for cameras that are not active
during the entire sampling period.
Disclaimer! I'm not sure what it will do with NAs in the count column yet.
}
\examples{
df <- data.frame(cam = c(1,1,2,2),
            datetime = as.POSIXct(c("2016-01-02 12:00:00",
                                    "2016-01-03 13:12:00",
                                    "2016-01-02 14:00:00",
                                    "2016-01-03 16:53:42"),
                                   tz = "GMT"),
                  a = c(850, 850, 1100, 1100),
                  count = c(1, 0, 0, 2))
tab <- a_lookup_fn(df)
d <- as.POSIXct(c("2016-01-01 00:00:00", "2016-01-04 23:59:59"), tz = "GMT")
ste_data_fn(df,
            count_col = "count",
            samp_freq = 3600,
            samp_length = 10,
            cam_areas = tab,
            date_lim = d,
            A = 150000)
}
