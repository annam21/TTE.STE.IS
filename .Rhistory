per_length = per,
nper = 24,
time_btw = 2 * 3600,
study_start = study_dates[1],
study_end = study_dates[2]
)
# For paper
oc <- tte_build_occ(
per_length = 3600,
nper = 24,
time_btw = 2 * 3600,
study_start = study_dates[1],
study_end = study_dates[2]
)
oc
study_dates <- as.POSIXct(c("2016-01-01 00:00:00", "2016-01-04 23:59:59"), tz = "GMT")
occ <- tte_build_occ(
per_length = per,
nper = 24,
time_btw = 2 * 3600,
study_start = study_dates[1],
study_end = study_dates[2]
)
# For paper
oc <- tte_build_occ(
per_length = 3600/2,
nper = 24,
time_btw = 2 * 3600,
study_start = study_dates[1],
study_end = study_dates[2]
)
oc
tte_estN_fn(tte_eh, study_area = 1e6)
library(tidyverse)
# simulate data
ncam <- 100
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- matrix(rexp(nocc, rate = lambda), ncol = nocc )
toevent[toevent > censor] <- NA
is.censored <- matrix(0, nrow = nrow(toevent), ncol = ncol(toevent))
is.censored[is.na(toevent)] <- 1
library(spaceNtime)
toevent <- rexp(nocc, rate = lambda)
toevent
toevent[toevent > censor] <- NA
toevent
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_eh
ste_estN_fn(ste_eh, study_area = A)
toevent
# Good. Now work backwards to make camera data
toevent/a
# Good. Now work backwards to make camera data
floor(toevent/a) # This is the camera at which the detection was made
tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a)
)
tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a)
) %>% head(30)
tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a)
) %>% print(n=30)
ncam <- 10
nocc <- 10
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
ncam <- 100
nocc <- 10
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
ncam <- 100
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
whichcam <- tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a)
) %>%
occbycam = expand_grid(1:nocc, 1:ncam)
occbycam <- expand_grid(1:nocc, 1:ncam)
head(occbycam)
occbycam <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
)
class(occbycam)
occbycam
whichcam
whichcam <- tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a)
)
whichcam
occbycam
occbycam <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam)
occbycam
first(!is.na(occbycam$toevent))
min(!is.na(occbycam$toevent))
min(which(!is.na(occbycam$toevent)))
occbycam %>% slice(1100:1110)
occbycam <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1))
occbycam %>% slice(1100:1110)
occbycam %>% slice(1100:1200)
occbycam %>% slice(1100:1200)%>%print(n=Inf)
count = replace(count, toevent == cam, 1)
occbycam <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1) )
occbycam
whichcam
?seq
datetime <- seq(to = 1000, by = 2)
datetime
datetime <- seq(to = 100, by = 2, length.out = 100)
datetime
Sys.time()
datetime <- seq(to = Sys.time(), by = 2, length.out = 100)
as.numeric(Sys.time())
# Make occasions every 1 hour
e <- Sys.time() - 1000
e
# Make occasions every 1 hour
e <- Sys.time() - 10000
e
# Make occasions every 1 hour
e <- Sys.time() - 100000
e
# Make occasions every 1 hour
e <- Sys.time() - 1000000
e
# Make occasions every 1 hour
ss <- as.POSIXct("2020-10-22 00:57:26", tz = "UTC")
ss
# Make occasions every 1 hour
ss <- as.POSIXct("2020-01-15 02:00:00", tz = "UTC")
ss
# Make occasions every 1 hour
ss <- as.POSIXct("2020-01-15 22:00:00", tz = "UTC")
ss
class(ss)
datetime <- seq(from = ss, by = 3600, length.out = 100)
datetime
# Make occasions every 1 hour
ss <- as.POSIXct("2020-01-15 08:00:00", tz = "UTC")
datetime <- seq(from = ss, by = 3600, length.out = 1000)
datetime
whichcam <- tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a),
datetime = datetime
)
occbycam <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1) ) %>%
select(-toevent)
occbycam
whichcam
whichcam <- tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a),
datetime = datetime
)
dat <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1) ) %>%
select(-toevent)
dat
dat <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1) ) %>%
select(-toevent, -occ)
dat
deploy <- dat %>%
mutate(start = datetime,
end = datetime,
area = a)
deploy
deploy <- dat %>%
mutate(start = datetime,
end = datetime,
area = a) %>%
select(-datetime)
deploy
deploy <- dat %>%
mutate(start = datetime,
end = datetime,
area = a) %>%
select(-datetime, -count)
deploy
study_dates <- c(min(datetime), max(datetime))
study_dates
occ <- build_occ(samp_freq = 3600, # seconds between the start of each sampling occasion
samp_length = 1, # duration of each sampling occasion (seconds)
study_start = study_dates[1],
study_end = study_dates[2])
occ
occ <- build_occ(samp_freq = 3600, # seconds between the start of each sampling occasion
samp_length = 0, # duration of each sampling occasion (seconds)
study_start = study_dates[1],
study_end = study_dates[2])
occ
head(occ)
ste_eh <- ste_build_eh(dat, deploy, occ)
library(spaceNtime)
# simulate data
ncam <- 100
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# Make occasions every 1 hour
ss <- as.POSIXct("2020-01-15 08:00:00", tz = "UTC") # Random starting time
datetime <- seq(from = ss, by = 3600, length.out = nocc)
# floor(toevent/a) # This is the camera at which the detection was made
whichcam <- tibble::tibble(
occ = 1:nocc,
toevent = floor(toevent/a),
datetime = datetime
)
dat <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1) ) %>%
select(-toevent, -occ)
deploy <- dat %>%
mutate(start = datetime,
end = datetime,
area = a) %>%
select(-datetime, -count)
library(tidyverse)
dat <- expand_grid(
occ = 1:nocc,
cam = 1:ncam
) %>%
left_join(., whichcam) %>%
mutate(count = 0,
count = replace(count, toevent == cam, 1) ) %>%
select(-toevent, -occ)
deploy <- dat %>%
mutate(start = datetime,
end = datetime,
area = a) %>%
select(-datetime, -count)
study_dates <- c(min(datetime), max(datetime))
occ <- build_occ(samp_freq = 3600, # seconds between the start of each sampling occasion
samp_length = 0, # duration of each sampling occasion (seconds)
study_start = study_dates[1],
study_end = study_dates[2])
ste_eh <- ste_build_eh(dat, deploy, occ)
occ <- build_occ(samp_freq = 3600, # seconds between the start of each sampling occasion
samp_length = 10, # duration of each sampling occasion (seconds)
study_start = study_dates[1],
study_end = study_dates[2])
ste_eh <- ste_build_eh(dat, deploy, occ)
dim(deploy)
dim_occ
dim(occ)
# simulate data
ncam <- 30
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
# simulate data
ncam <- 30
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
ncam <- 50
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
ncam <- 100
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
ncam <- 120
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
ncam <- 300
nocc <- 1000
N <- 100
A <- 1000 * 1000 * 10 # 10 km2, written in m2
a <- 50 # square meters
censor <- ncam * a
lambda <- N/A
set.seed(101)
toevent <- rexp(nocc, rate = lambda)
toevent[toevent > censor] <- NA
# test it first
ste_eh <- tibble::tibble(
occ = 1:nocc,
start = as.POSIXct(Sys.time()),
end=as.POSIXct(Sys.time()),
STE = toevent,
censor = censor
)
ste_estN_fn(ste_eh, study_area = A)
# Good.
whichcam
# deploy <- dat %>%
#   mutate(start = datetime,
#          end = datetime,
#          area = a) %>%
#   select(-datetime, -count)
deploy <- tibble::tibble(
cam = 1:ncam,
start = min(datetime),
end = max(datetime),
area = a
)
study_dates <- c(min(datetime), max(datetime))
occ <- build_occ(samp_freq = 3600, # seconds between the start of each sampling occasion
samp_length = 10, # duration of each sampling occasion (seconds)
study_start = study_dates[1],
study_end = study_dates[2])
ste_eh <- ste_build_eh(dat, deploy, occ)
ste_estN_fn(ste_eh)
ste_estN_fn(ste_eh, A)
.947-(.024*1.95)
.865-(.039*1.95)
.831-(.045*1.95)
.831+(.045*1.95)
.561-(.095*1.95)
.561+(.095*1.95)
.731-(.074*1.95)
.731+(.074*1.95)
.692-(.075*1.95)
.692+(.075*1.95)
38/92
1-(38/92)
92-38
